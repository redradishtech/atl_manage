#!/bin/bash -eu

shopt -s globstar dotglob



# I'm pretttty sure we can assume PWD is the hg repo's directory, but it would be pretty disastrous if this were not the case. Leave this check in here for a few years.
if [[ $(basename "$(pwd)") = atl_manage && -d .hg ]]; then
	# Everything should be owned by root, rather than whatever used did the checkout. The practical reason for this is that if root tries to run a hg command, and .hg/hgrc isn't owned by root, hg throws a 'not trusting file' error. This happens e.g. when the start-pre event runs atl_check_appdeployment as root, which then runs hg commands in $ATL_MANAGE and $ATL_PROFILEDIR. The 'sudo' group then allows admins to see $ATL_PROFILEDIR (root or 'sudo -sE' required to modify)
	chown -R root:sudo . "${ATL_PROFILEDIR:?}"
	# The sudo group needs write access, e.g. when jturner runs 'hg serve' and a remote client pushes /opt/atl_manage
	chmod -R ug+rw .
	setfacl -R -m o:rX .
	# Make o+rX the default, so editing files (prior to a commit that triggers the above setfacl) doesn't instantly break validateperms_nagioscheck
	# Edit: don't set the default ACL, as this causes bin/atl_upgrade.sh to become +x
	#setfacl -R -d -m o:rX .
	# isso wants read access to everything in lib
	if [[ -d venv/lib ]]; then
		# venv/lib is created by atl_setup
		setfacl -R -m o:rX venv/lib
	fi
	# Runtime users like 'jira' need to be able to run jeventutils scripts, and due to our overly restrictive umask won't have execute permission unless we grant it here
	chmod o+x lib/jeventutils/bin/*
	chmod o+x activate.sh

else
	echo >&2 "WARNING WARNING WARNING"
	echo >&2 "WARNING WARNING WARNING"
	echo >&2 "WARNING WARNING WARNING"
	echo >&2 "WARNING WARNING WARNING"
	echo >&2 "Assumption violated: the $0 script was called with PWD $PWD, jot '"
fi
