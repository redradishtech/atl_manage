#!/bin/bash -eu
# SYNOPSIS: runs the command in a /etc/cron.d/* cronjob generated by 'atl_install_monitoring_services'. The command is run as the designated user.
shopt -s extglob

. "$ATL_MANAGE/lib/common.sh"
. "$ATL_MANAGE/lib/profile.sh"

user=
cmd=

main() {
	local key="$1"
	local cronfile=/etc/cron.d/"$(echo "$ATL_SHORTNAME-$key" | cronfriendlyname)"
	[[ -f "$cronfile" ]] || usage "No such file: $cronfile"
	_atl_unset_vars
	parsefile "$cronfile"
	runcmd=()
	if [[ $EUID != $(id -u "$user") ]]; then
		runcmd=(sudo -u "$user" bash -c "${cmd@Q}")
		log "Running: ${runcmd[*]}"
		eval "${runcmd[@]}"
	else
		log "Running: $cmd"
		bash -c "$cmd"
	fi
	#jevents -n1 "$key"
}

parsefile() {
	local line
	username='[a-z_][a-z0-9_-]*[$]?' # https://unix.stackexchange.com/questions/157426/what-is-the-regex-to-validate-linux-users#:~:text=It%20is%20usually%20recommended%20to,%2D%5D*%5B%24%5D%3F
	while read -r line; do
		if [[ $line =~ ^PATH= ]]; then
			eval "$line"
		elif [[ $line =~ ^SHELL= ]]; then
			:
		elif [[ $line =~ ^(@[a-z]+[[:space:]]+|([\*\/0-9a-zA-Z,]+[[:space:]]+){5})($username)[[:space:]]+(.+) ]]; then # Handle @weekly etc too
			user="${BASH_REMATCH[3]}"
			id "$user" >/dev/null || fail "Parsing cron file '$cronfile', we parsed user '$user' out of a line, but that user does not exist. Line is: «$line»"
			cmd="${BASH_REMATCH[4]}"
		else
			warn "Unknown line: $line"
		fi
	done < <(cat "$1" | grep -v '^#')
	[[ -n $user && -n $cmd ]] || fail "failed to parse '$cronfile'"
}

usage() {
	echo >&2 "$*"
	echo >&2 "Usage: $0 <monitor>"
	echo >&2 "Where <monitor> is one of:"
	(
		cd /etc/cron.d/
		find . -maxdepth 1 -name "$ATL_SHORTNAME-*" | sed -e "s/^.\/$ATL_SHORTNAME-//"
	)
	exit 2
}

(($# == 1)) || usage "$@"
main "$@"
