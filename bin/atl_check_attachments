#!/bin/bash -eu
## Prints paths of Confluence attachments missing from disk.

# shellcheck source=/opt/atl_manage/lib/common.sh
source "$ATL_MANAGE/lib/common.sh" --

usage() {
	echo >&2 "Usage: $0 [-u]"
	exit 1
}

ignoreknownmissing() {
	if [[ -f "$MISSING" ]]; then grep -v -f "$MISSING"; else tee; fi
}
main() {
	# TODO: set exit code to nonzero, so this can be used in a nagios check
	# {{{ Parseopts
	set -eu # Rely on quick failure from getopt if wrong arg is passed
	#https://stackoverflow.com/questions/192249/how-do-i-parse-command-line-arguments-in-bash/38153758
	PARSED=$(getopt --options 'r' --longoptions 'help,record,wiki' --name "$0" -- "$@")
	# use eval with "$PARSED" to properly handle the quoting
	eval set -- "$PARSED"
	record=
	wiki=
	# now enjoy the options in order and nicely split until we see --
	while true; do
		case "$1" in
		-u | --record) record=yes ;;
		--wiki) wiki=true ;;
		--)
			shift
			break
			;;
		-h | --help) usage "$@" ;;
		*) usage ;;
		esac
		shift
	done
	# }}}
	MISSING="$ATL_APPDIR/known_missing_attachments.txt"
	set -o pipefail
	if [[ $ATL_PRODUCT = confluence ]]; then
		if [[ -n ${wiki:-} ]]; then echo "|| Page || Attachment || Missing File || Notes ||"; fi
		SEP=''
		atl_pg_conf_attachments |
			atl_psql -F"$SEP" -tXAq |
			ignoreknownmissing |
			while IFS="$SEP" read -r path filesize pagetitle pagelink pagelink2 filename filelink is_first; do
				if [[ ! -f "$ATL_DATADIR/$path" ]]; then
					if [[ -n ${wiki:-} ]]; then
						echo -ne "| [${pagetitle}|${pagelink}] | [${filename}|${filelink}] | {{${path}}} |  "
						[[ $is_first = t ]] && echo -ne "Missing attachment" || echo -ne "Missing old version of attachment"
						echo " |"
					else
						echo -ne "\nMissing "
						[[ $is_first = t ]] || echo -ne "old version of "
						echo -ne "attachment:\nPath: $ATL_DATADIR/$path\nPage: $pagetitle\nPage URL: $pagelink\nAlt Page URL: $pagelink2\nAttachment: $filename\nAttachment link: $filelink\n"
					fi
					if [[ -n ${record:-} ]]; then
						if [[ ! -f $MISSING ]]; then
							echo -e "# The following attachments are known to be missing from the filesystem, but recorded in the database.\n# This list was first generated by atl_check_attachments at $(date)" >"$MISSING"
						fi
						echo "$path" >>"$MISSING"
					fi
				else
					filesize_actual=$(stat --printf="%s" "$ATL_DATADIR/$path")
					if [[ $filesize != "$filesize_actual" ]]; then
						if [[ -n ${wiki:-} ]]; then
							:
						else
							echo -e "\nBad file size:"
							echo "Path: $path"
							echo "Expected size (b): $filesize"
							echo "Actual  size  (b): $filesize_actual"
						fi
					else
						echo >&2 -n "âœ“"
					fi
				fi
			done
	else
		warn "No checks written for $ATL_PRODUCT"
	fi
}

usage() {
	cat <<EOF
$*
Purpose: Prints paths of attachments missing from disk.

Usage:
atl_check_attachments [options]

Options:
	-r --record		Record missing paths in $MISSING. These will be ignored on next run.
	--wiki			Output wiki format rather than text
	-h			Show this message

Notes:

EOF
	exit
}

main "$@"
